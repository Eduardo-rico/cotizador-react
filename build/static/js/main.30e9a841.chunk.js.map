{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","serviceWorker.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","diferencia","Date","getFullYear","obtenerDiferenciaYear","resultado","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","ResultadoCotizacion","Mensaje","p","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","key","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.30e9a841.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport PropTypes from \"prop-types\";\nconst ContenedorHeader = styled.header`\n  background-color: #26c6da;\n  padding: 10px;\n  font-weight: bold;\n  color: #fff;\n`;\n\nconst TextoHeader = styled.h1`\n  font-size: 2rem;\n  margin: 0;\n  font-family: \"Slabo 27px, serif\";\n  text-align: center;\n`;\n\nconst Header = ({ titulo }) => {\n  return (\n    <ContenedorHeader>\n      <TextoHeader>{titulo}</TextoHeader>\n    </ContenedorHeader>\n  );\n};\n\nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired\n};\n\nexport default Header;\n","const obtenerDiferenciaYear = (year) => {\n  return new Date().getFullYear() - year;\n};\n\n//calcula el total a pagar segun la marca\nconst calcularMarca = (marca) => {\n  let incremento;\n  switch (marca) {\n    case \"europeo\":\n      incremento = 1.3;\n      break;\n    case \"americano\":\n      incremento = 1.15;\n      break;\n    case \"asiatico\":\n      incremento = 1.05;\n      break;\n\n    default:\n      break;\n  }\n  return incremento;\n};\n\n//calcula el tipo de seguro a pagar\nconst obtenerPlan = (plan) => {\n  return plan === \"basico\" ? 1.2 : 1.5;\n};\n\n//muestra primera letra mayuscula\nconst primerMayuscula = (texto) => {\n  return texto.charAt(0).toUpperCase() + texto.slice(1);\n};\n\nexport { obtenerDiferenciaYear, calcularMarca, obtenerPlan, primerMayuscula };\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from \"../helper\";\nimport PropTypes from \"prop-types\";\n\nconst Campo = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n  display: block;\n  width: 100%;\n  padding: 1rem;\n  border: 1px solid #e1e1e1;\n  -webkit-appearance: none;\n`;\nconst InputRadio = styled.input`\n  margin: 0 1rem;\n`;\nconst Boton = styled.button`\n  background-color: #2f6e7d;\n  font-size: 16px;\n  width: 100%;\n  padding: 1rem;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  border: none;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #26c6da;\n    cursor: pointer;\n  }\n`;\n\nconst Error = styled.div`\n  background-color: red;\n  color: white;\n  padding: 1rem;\n  width: 100%;\n  text-align: center;\n  margin-bottom: 2rem;\n`;\n\nconst Formulario = ({ guardarResumen, guardarCargando }) => {\n  const [datos, guardarDatos] = useState({\n    marca: \"\",\n    year: \"\",\n    plan: \"\"\n  });\n  //state para el error\n  const [error, guardarError] = useState(false);\n\n  //exrtraer valores del state\n  const { marca, year, plan } = datos;\n  //leer datos del formulario y colocarlos en el state\n  const obtenerInformacion = (e) => {\n    guardarDatos({\n      ...datos,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  //cuando el usuario presiona submit\n  const cotizarSeguro = (e) => {\n    e.preventDefault();\n    if (marca.trim() === \"\" || year.trim() === \"\" || plan.trim() === \"\") {\n      guardarError(true);\n      return;\n    }\n    guardarError(false);\n\n    //una vez pasada la validacion\n\n    //obtener la diferencia de años\n\n    const diferencia = obtenerDiferenciaYear(year);\n\n    //una base de 2000\n    let resultado = 2000;\n\n    //por cada año hay que restar el 3%\n\n    resultado -= (diferencia * 3 * resultado) / 100;\n\n    //incremento del americano 15% asiatico 5% europeo 30%\n    resultado = calcularMarca(marca) * resultado;\n    // console.log(resultado);\n\n    //basico aumenta 20% completo 50%\n    const incrementoPlan = obtenerPlan(plan);\n    resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n\n    //pal spiner\n    guardarCargando(true);\n\n    // total\n    setTimeout(() => {\n      guardarCargando(false);\n      guardarResumen({\n        cotizacion: Number(resultado),\n        datos\n      });\n    }, 1500);\n  };\n\n  return (\n    <form onSubmit={cotizarSeguro}>\n      {error ? <Error>Todos los campos son obligatorios</Error> : null}\n      <Campo>\n        <Label>Marca</Label>\n        <Select name='marca' value={marca} onChange={obtenerInformacion}>\n          <option value=''>-- Seleccione --</option>\n          <option value='americano'>americano</option>\n          <option value='europeo'>europeo</option>\n          <option value='asiatico'>asiatico</option>\n        </Select>\n      </Campo>\n      <Campo>\n        <Label>Año</Label>\n        <Select name='year' value={year} onChange={obtenerInformacion}>\n          <option value=''>-- Seleccione --</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n          <option value='2018'>2018</option>\n          <option value='2017'>2017</option>\n          <option value='2016'>2016</option>\n          <option value='2015'>2015</option>\n          <option value='2014'>2014</option>\n          <option value='2013'>2013</option>\n          <option value='2012'>2012</option>\n        </Select>\n      </Campo>\n      <Campo>\n        <Label>Plan</Label>\n        <InputRadio\n          type='radio'\n          name='plan'\n          value='basico'\n          checked={plan === \"basico\"}\n          onChange={obtenerInformacion}\n        />\n        Basico\n        <InputRadio\n          type='radio'\n          name='plan'\n          value='completo'\n          checked={plan === \"completo\"}\n          onChange={obtenerInformacion}\n        />\n        Completo\n      </Campo>\n      <Boton type='submit'>Cotizar</Boton>\n    </form>\n  );\n};\n\nFormulario.propTypes = {\n  guardarResumen: PropTypes.func.isRequired,\n  guardarCargando: PropTypes.func.isRequired\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { primerMayuscula } from \"../helper\";\nimport PropTypes from \"prop-types\";\n\nconst ContenedorResumen = styled.div`\n  padding: 1rem;\n  text-align: center;\n  background-color: #00838f;\n  color: #fff;\n  margin-top: 1rem;\n`;\n\nconst Resumen = ({ datos }) => {\n  const { marca, year, plan } = datos;\n  //para no poner un ternario en el App.js\n  if (marca === \"\" || year === \"\" || plan === \"\") return null;\n\n  return (\n    <ContenedorResumen>\n      <h2>Resumen de cotizacion</h2>\n      <ul>\n        <li>Marca: {primerMayuscula(marca)}</li>\n        <li>Año: {year}</li>\n        <li>Plan: {primerMayuscula(plan)}</li>\n      </ul>\n    </ContenedorResumen>\n  );\n};\n\nResumen.propTypes = {\n  datos: PropTypes.object.isRequired\n};\n\nexport default Resumen;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\n\nconst ResultadoCotizacion = styled.div`\n  text-align: center;\n  padding: 1.5 rem;\n  border: 1px solid #26c6da;\n  background-color: rgb(127, 224, 237);\n  margin-top: 1rem;\n  position: relative;\n`;\n//se necesita la position relative para la animacion\n\nconst Mensaje = styled.p`\n  background-color: rgb(127, 224, 237);\n  margin-top: 2rem;\n  padding: 1rem;\n  text-align: center;\n`;\n\nconst TextoCotizacion = styled.p`\n  color: #00838f;\n  padding: 1rem;\n  text-transform: uppercase;\n  font-weight: bold;\n  margin: 0;\n`;\n\nconst Resultado = ({ cotizacion }) => {\n  return cotizacion === 0 ? (\n    <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\n  ) : (\n    <ResultadoCotizacion>\n      <TransitionGroup component='span' className='resultado'>\n        <CSSTransition\n          classNames='resultado'\n          key={cotizacion}\n          timeout={{ enter: 500, exit: 500 }}\n        >\n          <TextoCotizacion>\n            El total es: $ <span>{cotizacion}</span>\n          </TextoCotizacion>\n        </CSSTransition>\n      </TransitionGroup>\n    </ResultadoCotizacion>\n  );\n};\n\nResultado.propTypes = {\n  cotizacion: PropTypes.number.isRequired\n};\n\nexport default Resultado;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return (\n    <div className='spinner'>\n      <div className='dot1'></div>\n      <div className='dot2'></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\n\nimport styled from \"@emotion/styled\";\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport Spinner from \"./components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: \"\",\n      year: \"\",\n      plan: \"\"\n    }\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n\n  const { datos, cotizacion } = resumen;\n\n  return (\n    <Contenedor>\n      <Header titulo='Cotizador de seguros' />\n      <ContenedorFormulario>\n        <Formulario\n          guardarResumen={guardarResumen}\n          guardarCargando={guardarCargando}\n        />\n        {cargando ? <Spinner /> : null}\n        <Resumen datos={datos} />\n        {!cargando ? <Resultado cotizacion={cotizacion} /> : null}\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}